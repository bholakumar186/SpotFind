// Generated by view binder compiler. Do not edit!
package com.example.spotfind.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spotfind.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRentParkingBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnLocation;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final CheckBox cbCameraAvailability;

  @NonNull
  public final CheckBox cbGuardAvailability;

  @NonNull
  public final ScrollView main;

  @NonNull
  public final TextInputEditText tietAlternateNumber;

  @NonNull
  public final TextInputEditText tietAvailabilityTime;

  @NonNull
  public final TextInputEditText tietCity;

  @NonNull
  public final TextInputEditText tietHouseNumber;

  @NonNull
  public final TextInputEditText tietLandmark;

  @NonNull
  public final TextInputEditText tietLocality;

  @NonNull
  public final TextInputEditText tietOwnerName;

  @NonNull
  public final TextInputEditText tietParkingSize;

  @NonNull
  public final TextInputEditText tietPhoneNumber;

  @NonNull
  public final TextInputEditText tietPin;

  @NonNull
  public final TextInputEditText tietState;

  @NonNull
  public final TextInputEditText tietStreet;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvRent;

  private ActivityRentParkingBinding(@NonNull ScrollView rootView, @NonNull Button btnLocation,
      @NonNull Button btnSubmit, @NonNull CheckBox cbCameraAvailability,
      @NonNull CheckBox cbGuardAvailability, @NonNull ScrollView main,
      @NonNull TextInputEditText tietAlternateNumber,
      @NonNull TextInputEditText tietAvailabilityTime, @NonNull TextInputEditText tietCity,
      @NonNull TextInputEditText tietHouseNumber, @NonNull TextInputEditText tietLandmark,
      @NonNull TextInputEditText tietLocality, @NonNull TextInputEditText tietOwnerName,
      @NonNull TextInputEditText tietParkingSize, @NonNull TextInputEditText tietPhoneNumber,
      @NonNull TextInputEditText tietPin, @NonNull TextInputEditText tietState,
      @NonNull TextInputEditText tietStreet, @NonNull TextView tvLocation,
      @NonNull TextView tvRent) {
    this.rootView = rootView;
    this.btnLocation = btnLocation;
    this.btnSubmit = btnSubmit;
    this.cbCameraAvailability = cbCameraAvailability;
    this.cbGuardAvailability = cbGuardAvailability;
    this.main = main;
    this.tietAlternateNumber = tietAlternateNumber;
    this.tietAvailabilityTime = tietAvailabilityTime;
    this.tietCity = tietCity;
    this.tietHouseNumber = tietHouseNumber;
    this.tietLandmark = tietLandmark;
    this.tietLocality = tietLocality;
    this.tietOwnerName = tietOwnerName;
    this.tietParkingSize = tietParkingSize;
    this.tietPhoneNumber = tietPhoneNumber;
    this.tietPin = tietPin;
    this.tietState = tietState;
    this.tietStreet = tietStreet;
    this.tvLocation = tvLocation;
    this.tvRent = tvRent;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRentParkingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRentParkingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_rent_parking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRentParkingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLocation;
      Button btnLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnLocation == null) {
        break missingId;
      }

      id = R.id.btnSubmit;
      Button btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.cbCameraAvailability;
      CheckBox cbCameraAvailability = ViewBindings.findChildViewById(rootView, id);
      if (cbCameraAvailability == null) {
        break missingId;
      }

      id = R.id.cbGuardAvailability;
      CheckBox cbGuardAvailability = ViewBindings.findChildViewById(rootView, id);
      if (cbGuardAvailability == null) {
        break missingId;
      }

      ScrollView main = (ScrollView) rootView;

      id = R.id.tietAlternateNumber;
      TextInputEditText tietAlternateNumber = ViewBindings.findChildViewById(rootView, id);
      if (tietAlternateNumber == null) {
        break missingId;
      }

      id = R.id.tietAvailabilityTime;
      TextInputEditText tietAvailabilityTime = ViewBindings.findChildViewById(rootView, id);
      if (tietAvailabilityTime == null) {
        break missingId;
      }

      id = R.id.tietCity;
      TextInputEditText tietCity = ViewBindings.findChildViewById(rootView, id);
      if (tietCity == null) {
        break missingId;
      }

      id = R.id.tietHouseNumber;
      TextInputEditText tietHouseNumber = ViewBindings.findChildViewById(rootView, id);
      if (tietHouseNumber == null) {
        break missingId;
      }

      id = R.id.tietLandmark;
      TextInputEditText tietLandmark = ViewBindings.findChildViewById(rootView, id);
      if (tietLandmark == null) {
        break missingId;
      }

      id = R.id.tietLocality;
      TextInputEditText tietLocality = ViewBindings.findChildViewById(rootView, id);
      if (tietLocality == null) {
        break missingId;
      }

      id = R.id.tietOwnerName;
      TextInputEditText tietOwnerName = ViewBindings.findChildViewById(rootView, id);
      if (tietOwnerName == null) {
        break missingId;
      }

      id = R.id.tietParkingSize;
      TextInputEditText tietParkingSize = ViewBindings.findChildViewById(rootView, id);
      if (tietParkingSize == null) {
        break missingId;
      }

      id = R.id.tietPhoneNumber;
      TextInputEditText tietPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (tietPhoneNumber == null) {
        break missingId;
      }

      id = R.id.tietPin;
      TextInputEditText tietPin = ViewBindings.findChildViewById(rootView, id);
      if (tietPin == null) {
        break missingId;
      }

      id = R.id.tietState;
      TextInputEditText tietState = ViewBindings.findChildViewById(rootView, id);
      if (tietState == null) {
        break missingId;
      }

      id = R.id.tietStreet;
      TextInputEditText tietStreet = ViewBindings.findChildViewById(rootView, id);
      if (tietStreet == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvRent;
      TextView tvRent = ViewBindings.findChildViewById(rootView, id);
      if (tvRent == null) {
        break missingId;
      }

      return new ActivityRentParkingBinding((ScrollView) rootView, btnLocation, btnSubmit,
          cbCameraAvailability, cbGuardAvailability, main, tietAlternateNumber,
          tietAvailabilityTime, tietCity, tietHouseNumber, tietLandmark, tietLocality,
          tietOwnerName, tietParkingSize, tietPhoneNumber, tietPin, tietState, tietStreet,
          tvLocation, tvRent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
