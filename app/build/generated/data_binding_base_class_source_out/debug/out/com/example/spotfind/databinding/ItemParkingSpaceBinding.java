// Generated by view binder compiler. Do not edit!
package com.example.spotfind.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spotfind.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemParkingSpaceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvAlternateNumber;

  @NonNull
  public final TextView tvAvailabilityTime;

  @NonNull
  public final TextView tvCameraAvailability;

  @NonNull
  public final TextView tvCity;

  @NonNull
  public final TextView tvGuardAvailability;

  @NonNull
  public final TextView tvHouseNumber;

  @NonNull
  public final TextView tvLandmark;

  @NonNull
  public final TextView tvLocality;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvOwnerName;

  @NonNull
  public final TextView tvParkingSize;

  @NonNull
  public final TextView tvPhoneNumber;

  @NonNull
  public final TextView tvPin;

  @NonNull
  public final TextView tvState;

  @NonNull
  public final TextView tvStreet;

  private ItemParkingSpaceBinding(@NonNull LinearLayout rootView,
      @NonNull TextView tvAlternateNumber, @NonNull TextView tvAvailabilityTime,
      @NonNull TextView tvCameraAvailability, @NonNull TextView tvCity,
      @NonNull TextView tvGuardAvailability, @NonNull TextView tvHouseNumber,
      @NonNull TextView tvLandmark, @NonNull TextView tvLocality, @NonNull TextView tvLocation,
      @NonNull TextView tvOwnerName, @NonNull TextView tvParkingSize,
      @NonNull TextView tvPhoneNumber, @NonNull TextView tvPin, @NonNull TextView tvState,
      @NonNull TextView tvStreet) {
    this.rootView = rootView;
    this.tvAlternateNumber = tvAlternateNumber;
    this.tvAvailabilityTime = tvAvailabilityTime;
    this.tvCameraAvailability = tvCameraAvailability;
    this.tvCity = tvCity;
    this.tvGuardAvailability = tvGuardAvailability;
    this.tvHouseNumber = tvHouseNumber;
    this.tvLandmark = tvLandmark;
    this.tvLocality = tvLocality;
    this.tvLocation = tvLocation;
    this.tvOwnerName = tvOwnerName;
    this.tvParkingSize = tvParkingSize;
    this.tvPhoneNumber = tvPhoneNumber;
    this.tvPin = tvPin;
    this.tvState = tvState;
    this.tvStreet = tvStreet;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemParkingSpaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemParkingSpaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_parking_space, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemParkingSpaceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvAlternateNumber;
      TextView tvAlternateNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvAlternateNumber == null) {
        break missingId;
      }

      id = R.id.tvAvailabilityTime;
      TextView tvAvailabilityTime = ViewBindings.findChildViewById(rootView, id);
      if (tvAvailabilityTime == null) {
        break missingId;
      }

      id = R.id.tvCameraAvailability;
      TextView tvCameraAvailability = ViewBindings.findChildViewById(rootView, id);
      if (tvCameraAvailability == null) {
        break missingId;
      }

      id = R.id.tvCity;
      TextView tvCity = ViewBindings.findChildViewById(rootView, id);
      if (tvCity == null) {
        break missingId;
      }

      id = R.id.tvGuardAvailability;
      TextView tvGuardAvailability = ViewBindings.findChildViewById(rootView, id);
      if (tvGuardAvailability == null) {
        break missingId;
      }

      id = R.id.tvHouseNumber;
      TextView tvHouseNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvHouseNumber == null) {
        break missingId;
      }

      id = R.id.tvLandmark;
      TextView tvLandmark = ViewBindings.findChildViewById(rootView, id);
      if (tvLandmark == null) {
        break missingId;
      }

      id = R.id.tvLocality;
      TextView tvLocality = ViewBindings.findChildViewById(rootView, id);
      if (tvLocality == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvOwnerName;
      TextView tvOwnerName = ViewBindings.findChildViewById(rootView, id);
      if (tvOwnerName == null) {
        break missingId;
      }

      id = R.id.tvParkingSize;
      TextView tvParkingSize = ViewBindings.findChildViewById(rootView, id);
      if (tvParkingSize == null) {
        break missingId;
      }

      id = R.id.tvPhoneNumber;
      TextView tvPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvPhoneNumber == null) {
        break missingId;
      }

      id = R.id.tvPin;
      TextView tvPin = ViewBindings.findChildViewById(rootView, id);
      if (tvPin == null) {
        break missingId;
      }

      id = R.id.tvState;
      TextView tvState = ViewBindings.findChildViewById(rootView, id);
      if (tvState == null) {
        break missingId;
      }

      id = R.id.tvStreet;
      TextView tvStreet = ViewBindings.findChildViewById(rootView, id);
      if (tvStreet == null) {
        break missingId;
      }

      return new ItemParkingSpaceBinding((LinearLayout) rootView, tvAlternateNumber,
          tvAvailabilityTime, tvCameraAvailability, tvCity, tvGuardAvailability, tvHouseNumber,
          tvLandmark, tvLocality, tvLocation, tvOwnerName, tvParkingSize, tvPhoneNumber, tvPin,
          tvState, tvStreet);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
