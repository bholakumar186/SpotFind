// Generated by view binder compiler. Do not edit!
package com.example.spotfind.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spotfind.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BookingItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView bookingTimeTextView;

  @NonNull
  public final TextView ownerNameTextView;

  @NonNull
  public final TextView parkingLocationTextView;

  @NonNull
  public final TextView parkingSizeTextView;

  @NonNull
  public final TextView userNameTextView;

  private BookingItemBinding(@NonNull LinearLayout rootView, @NonNull TextView bookingTimeTextView,
      @NonNull TextView ownerNameTextView, @NonNull TextView parkingLocationTextView,
      @NonNull TextView parkingSizeTextView, @NonNull TextView userNameTextView) {
    this.rootView = rootView;
    this.bookingTimeTextView = bookingTimeTextView;
    this.ownerNameTextView = ownerNameTextView;
    this.parkingLocationTextView = parkingLocationTextView;
    this.parkingSizeTextView = parkingSizeTextView;
    this.userNameTextView = userNameTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BookingItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BookingItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.booking_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BookingItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookingTimeTextView;
      TextView bookingTimeTextView = ViewBindings.findChildViewById(rootView, id);
      if (bookingTimeTextView == null) {
        break missingId;
      }

      id = R.id.ownerNameTextView;
      TextView ownerNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (ownerNameTextView == null) {
        break missingId;
      }

      id = R.id.parkingLocationTextView;
      TextView parkingLocationTextView = ViewBindings.findChildViewById(rootView, id);
      if (parkingLocationTextView == null) {
        break missingId;
      }

      id = R.id.parkingSizeTextView;
      TextView parkingSizeTextView = ViewBindings.findChildViewById(rootView, id);
      if (parkingSizeTextView == null) {
        break missingId;
      }

      id = R.id.userNameTextView;
      TextView userNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (userNameTextView == null) {
        break missingId;
      }

      return new BookingItemBinding((LinearLayout) rootView, bookingTimeTextView, ownerNameTextView,
          parkingLocationTextView, parkingSizeTextView, userNameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
